SET datestyle = 'ISO';
SET client_min_messages = WARNING;
CREATE EXTENSION parquet_fdw;
DROP ROLE IF EXISTS regress_parquet_fdw;
CREATE ROLE regress_parquet_fdw LOGIN SUPERUSER;
SET ROLE regress_parquet_fdw;
CREATE SERVER parquet_srv FOREIGN DATA WRAPPER parquet_fdw;
CREATE USER MAPPING FOR regress_parquet_fdw SERVER parquet_srv;
SET ROLE regress_parquet_fdw;
CREATE FOREIGN TABLE example1 (
    one     INT8,
    two     INT8[],
    three   TEXT,
    four    TIMESTAMP,
    five    DATE,
    six     BOOL)
SERVER parquet_srv
OPTIONS (filename '@abs_srcdir@/data/example1.parquet', sorted 'one');
SELECT * FROM example1;
 one |    two     | three |        four         |    five    | six 
-----+------------+-------+---------------------+------------+-----
   1 | {1,2,3}    | foo   | 2018-01-01 00:00:00 | 2018-01-01 | t
   2 | {NULL,5,6} | bar   | 2018-01-02 00:00:00 | 2018-01-02 | f
   3 | {7,8,9}    | baz   | 2018-01-03 00:00:00 | 2018-01-03 | t
   4 | {10,11,12} | uno   | 2018-01-04 00:00:00 | 2018-01-04 | f
   5 | {13,14,15} | dos   | 2018-01-05 00:00:00 | 2018-01-05 | f
   6 | {16,17,18} | tres  | 2018-01-06 00:00:00 | 2018-01-06 | f
(6 rows)

-- no explicit columns mentions
SELECT 1 as x FROM example1;
 x 
---
 1
 1
 1
 1
 1
 1
(6 rows)

SELECT count(*) as count FROM example1;
 count 
-------
     6
(1 row)

-- sorting
EXPLAIN (COSTS OFF) SELECT * FROM example1 ORDER BY one;
        QUERY PLAN        
--------------------------
 Foreign Scan on example1
   Reader: Single File
   Row groups: 1, 2
(3 rows)

EXPLAIN (COSTS OFF) SELECT * FROM example1 ORDER BY three;
           QUERY PLAN           
--------------------------------
 Sort
   Sort Key: three
   ->  Foreign Scan on example1
         Reader: Single File
         Row groups: 1, 2
(5 rows)

-- filtering
SET client_min_messages = DEBUG1;
SELECT * FROM example1 WHERE one < 1;
DEBUG:  parquet_fdw: skip rowgroup 1
DEBUG:  parquet_fdw: skip rowgroup 2
 one | two | three | four | five | six 
-----+-----+-------+------+------+-----
(0 rows)

SELECT * FROM example1 WHERE one <= 1;
DEBUG:  parquet_fdw: skip rowgroup 2
 one |   two   | three |        four         |    five    | six 
-----+---------+-------+---------------------+------------+-----
   1 | {1,2,3} | foo   | 2018-01-01 00:00:00 | 2018-01-01 | t
(1 row)

SELECT * FROM example1 WHERE one > 6;
DEBUG:  parquet_fdw: skip rowgroup 1
DEBUG:  parquet_fdw: skip rowgroup 2
 one | two | three | four | five | six 
-----+-----+-------+------+------+-----
(0 rows)

SELECT * FROM example1 WHERE one >= 6;
DEBUG:  parquet_fdw: skip rowgroup 1
 one |    two     | three |        four         |    five    | six 
-----+------------+-------+---------------------+------------+-----
   6 | {16,17,18} | tres  | 2018-01-06 00:00:00 | 2018-01-06 | f
(1 row)

SELECT * FROM example1 WHERE one = 2;
DEBUG:  parquet_fdw: skip rowgroup 2
 one |    two     | three |        four         |    five    | six 
-----+------------+-------+---------------------+------------+-----
   2 | {NULL,5,6} | bar   | 2018-01-02 00:00:00 | 2018-01-02 | f
(1 row)

SELECT * FROM example1 WHERE one = 7;
DEBUG:  parquet_fdw: skip rowgroup 1
DEBUG:  parquet_fdw: skip rowgroup 2
 one | two | three | four | five | six 
-----+-----+-------+------+------+-----
(0 rows)

SELECT * FROM example1 WHERE six = true;
DEBUG:  parquet_fdw: skip rowgroup 2
 one |   two   | three |        four         |    five    | six 
-----+---------+-------+---------------------+------------+-----
   1 | {1,2,3} | foo   | 2018-01-01 00:00:00 | 2018-01-01 | t
   3 | {7,8,9} | baz   | 2018-01-03 00:00:00 | 2018-01-03 | t
(2 rows)

SELECT * FROM example1 WHERE six = false;
 one |    two     | three |        four         |    five    | six 
-----+------------+-------+---------------------+------------+-----
   2 | {NULL,5,6} | bar   | 2018-01-02 00:00:00 | 2018-01-02 | f
   4 | {10,11,12} | uno   | 2018-01-04 00:00:00 | 2018-01-04 | f
   5 | {13,14,15} | dos   | 2018-01-05 00:00:00 | 2018-01-05 | f
   6 | {16,17,18} | tres  | 2018-01-06 00:00:00 | 2018-01-06 | f
(4 rows)

-- prepared statements
prepare prep(date) as select * from example1 where five < $1;
execute prep('2018-01-03');
DEBUG:  parquet_fdw: skip rowgroup 2
 one |    two     | three |        four         |    five    | six 
-----+------------+-------+---------------------+------------+-----
   1 | {1,2,3}    | foo   | 2018-01-01 00:00:00 | 2018-01-01 | t
   2 | {NULL,5,6} | bar   | 2018-01-02 00:00:00 | 2018-01-02 | f
(2 rows)

execute prep('2018-01-01');
DEBUG:  parquet_fdw: skip rowgroup 1
DEBUG:  parquet_fdw: skip rowgroup 2
 one | two | three | four | five | six 
-----+-----+-------+------+------+-----
(0 rows)

-- invalid options
SET client_min_messages = WARNING;
CREATE FOREIGN TABLE example_fail (one INT8, two INT8[], three TEXT)
SERVER parquet_srv;
ERROR:  parquet_fdw: filename is required
CREATE FOREIGN TABLE example_fail (one INT8, two INT8[], three TEXT)
SERVER parquet_srv
OPTIONS (filename 'nonexistent.parquet', some_option '123');
ERROR:  parquet_fdw: No such file or directory
CREATE FOREIGN TABLE example_fail (one INT8, two INT8[], three TEXT)
SERVER parquet_srv
OPTIONS (filename '@abs_srcdir@/data/example1.parquet', some_option '123');
ERROR:  parquet_fdw: invalid option "some_option"
-- type mismatch
CREATE FOREIGN TABLE example_fail (one INT8[], two INT8, three TEXT)
SERVER parquet_srv
OPTIONS (filename '@abs_srcdir@/data/example1.parquet', sorted 'one');
SELECT one FROM example_fail;
ERROR:  parquet_fdw: incompatible types in column "one"
HINT:  parquet column is of scalar type while postgres type is array
SELECT two FROM example_fail;
ERROR:  parquet_fdw: incompatible types in column "two"
HINT:  parquet column is of type list while postgres type is scalar
-- sequential multifile reader
CREATE FOREIGN TABLE example_seq (
    one     INT8,
    two     INT8[],
    three   TEXT,
    four    TIMESTAMP,
    five    DATE,
    six     BOOL)
SERVER parquet_srv
OPTIONS (filename '@abs_srcdir@/data/example1.parquet @abs_srcdir@/data/example2.parquet');
EXPLAIN SELECT * FROM example_seq;
                           QUERY PLAN                            
-----------------------------------------------------------------
 Foreign Scan on example_seq  (cost=0.00..0.11 rows=11 width=85)
   Reader: Multifile
   Row groups: 
 example1.parquet: 1, 2
 example2.parquet: 1
(5 rows)

SELECT * FROM example_seq;
 one |    two     | three |        four         |    five    | six 
-----+------------+-------+---------------------+------------+-----
   1 | {1,2,3}    | foo   | 2018-01-01 00:00:00 | 2018-01-01 | t
   2 | {NULL,5,6} | bar   | 2018-01-02 00:00:00 | 2018-01-02 | f
   3 | {7,8,9}    | baz   | 2018-01-03 00:00:00 | 2018-01-03 | t
   4 | {10,11,12} | uno   | 2018-01-04 00:00:00 | 2018-01-04 | f
   5 | {13,14,15} | dos   | 2018-01-05 00:00:00 | 2018-01-05 | f
   6 | {16,17,18} | tres  | 2018-01-06 00:00:00 | 2018-01-06 | f
   1 | {19,20}    | eins  | 2018-01-01 00:00:00 | 2018-01-01 | t
   3 | {21,22}    | zwei  | 2018-01-03 00:00:00 | 2018-01-03 | f
   5 | {23,24}    | drei  | 2018-01-05 00:00:00 | 2018-01-05 | t
   7 | {25,26}    | vier  | 2018-01-07 00:00:00 | 2018-01-07 | f
   9 | {27,28}    | fünf  | 2018-01-09 00:00:00 | 2018-01-09 | t
(11 rows)

-- multifile merge reader
CREATE FOREIGN TABLE example_merge (
    one     INT8,
    two     INT8[],
    three   TEXT,
    four    TIMESTAMP,
    five    DATE,
    six     BOOL)
SERVER parquet_srv
OPTIONS (filename '@abs_srcdir@/data/example1.parquet @abs_srcdir@/data/example2.parquet', sorted 'one');
EXPLAIN (COSTS OFF) SELECT * FROM example_merge ORDER BY one;
          QUERY PLAN           
-------------------------------
 Foreign Scan on example_merge
   Reader: Multifile Merge
   Row groups: 
 example1.parquet: 1, 2
 example2.parquet: 1
(5 rows)

SELECT * FROM example_merge ORDER BY one;
 one |    two     | three |        four         |    five    | six 
-----+------------+-------+---------------------+------------+-----
   1 | {19,20}    | eins  | 2018-01-01 00:00:00 | 2018-01-01 | t
   1 | {1,2,3}    | foo   | 2018-01-01 00:00:00 | 2018-01-01 | t
   2 | {NULL,5,6} | bar   | 2018-01-02 00:00:00 | 2018-01-02 | f
   3 | {21,22}    | zwei  | 2018-01-03 00:00:00 | 2018-01-03 | f
   3 | {7,8,9}    | baz   | 2018-01-03 00:00:00 | 2018-01-03 | t
   4 | {10,11,12} | uno   | 2018-01-04 00:00:00 | 2018-01-04 | f
   5 | {23,24}    | drei  | 2018-01-05 00:00:00 | 2018-01-05 | t
   5 | {13,14,15} | dos   | 2018-01-05 00:00:00 | 2018-01-05 | f
   6 | {16,17,18} | tres  | 2018-01-06 00:00:00 | 2018-01-06 | f
   7 | {25,26}    | vier  | 2018-01-07 00:00:00 | 2018-01-07 | f
   9 | {27,28}    | fünf  | 2018-01-09 00:00:00 | 2018-01-09 | t
(11 rows)

