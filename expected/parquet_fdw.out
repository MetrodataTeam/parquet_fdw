SET client_min_messages = WARNING;
CREATE EXTENSION parquet_fdw;
DROP ROLE IF EXISTS regress_parquet_fdw;
CREATE ROLE regress_parquet_fdw LOGIN SUPERUSER;
SET ROLE regress_parquet_fdw;
CREATE SERVER parquet_srv FOREIGN DATA WRAPPER parquet_fdw;
CREATE USER MAPPING FOR regress_parquet_fdw SERVER parquet_srv;
SET ROLE regress_parquet_fdw;
CREATE FOREIGN TABLE example (one INT8, two INT8[], three TEXT)
SERVER parquet_srv
OPTIONS (filename '/home/zilder/projects/parquet_fdw/data/example.parquet', sorted 'one');
SELECT * FROM example;
 one |    two     | three 
-----+------------+-------
   1 | {1,2,3}    | foo
   2 | {NULL,5,6} | bar
   3 | {7,8,9}    | baz
(3 rows)

-- sorting
EXPLAIN (COSTS OFF) SELECT * FROM example ORDER BY one;
       QUERY PLAN        
-------------------------
 Foreign Scan on example
(1 row)

EXPLAIN (COSTS OFF) SELECT * FROM example ORDER BY three;
          QUERY PLAN           
-------------------------------
 Sort
   Sort Key: three
   ->  Foreign Scan on example
(3 rows)

-- invalid options
CREATE FOREIGN TABLE example2 (one INT8, two INT8[], three TEXT)
SERVER parquet_srv;
ERROR:  parquet_fdw: filename is required
CREATE FOREIGN TABLE example2 (one INT8, two INT8[], three TEXT)
SERVER parquet_srv
OPTIONS (filename 'nonexistent.parquet', some_option '123');
ERROR:  parquet_fdw: No such file or directory
CREATE FOREIGN TABLE example2 (one INT8, two INT8[], three TEXT)
SERVER parquet_srv
OPTIONS (filename '/home/zilder/projects/parquet_fdw/data/example.parquet', some_option '123');
ERROR:  parquet_fdw: invalid option "some_option"
-- type mismatch
CREATE FOREIGN TABLE example2 (one INT8[], two INT8, three TEXT)
SERVER parquet_srv
OPTIONS (filename '/home/zilder/projects/parquet_fdw/data/example.parquet', sorted 'one');
SELECT one FROM example2;
ERROR:  parquet_fdw: incompatible types in column "one"
HINT:  parquet column is of scalar type while postgres type is array
SELECT two FROM example2;
ERROR:  parquet_fdw: incompatible types in column "two"
HINT:  parquet column is of type list while postgres type is scalar
